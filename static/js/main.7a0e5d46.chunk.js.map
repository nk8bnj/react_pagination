{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onChangePage","pagesAmount","Math","ceil","pages","i","push","_jsxs","className","children","_jsx","concat","href","onClick","prevPage","map","page","nextPage","items","from","to","numbers","n","getNumbers","App","setCurrentPage","useState","setPerPage","totalAmount","length","firstIndex","lastIndex","min","currentItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kKAOO,MAAMA,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAQ,GAEd,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAaI,GAAK,EACrCD,EAAME,KAAKD,GAeb,OACEE,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAS,aAAAG,OAA+B,IAAhBZ,EAAoB,WAAa,IAAKU,SAChEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAK,QACL,gBAA+B,IAAhBb,EACfc,QApBSC,KACXf,EAAc,GAChBC,EAAaD,EAAc,IAkBLU,SACnB,WAIFL,EAAMW,KAAIC,GACTN,cAAA,MAEEF,UAAS,aAAAG,OAAeZ,IAAgBiB,EAAO,SAAW,IAAKP,SAE/DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAI,IAAAD,OAAMK,GACVH,QAASA,IAAMb,EAAagB,GAAMP,SAEjCO,KATEA,KAaTN,cAAA,MACEF,UAAS,aAAAG,OAAeZ,IAAgBE,EAAc,WAAa,IAAKQ,SAExEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAK,QACL,gBAAeb,IAAgBE,EAC/BY,QA1CSI,KACXlB,EAAcE,GAChBD,EAAaD,EAAc,IAwCLU,SACnB,e,KC7DT,MAAMS,ECRC,SAAoBC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQf,KAAKgB,GAGf,OAAOD,EDCKE,CAAW,EAAG,IAAIR,KAAIO,GAAC,QAAAX,OAAYW,KAEpCE,EAAgBA,KAC3B,MAAOzB,EAAa0B,GAAkBC,mBAAS,IACxC5B,EAAS6B,GAAcD,mBAAS,GAEjCE,EAAcV,EAAMW,OACpBC,GAAc/B,EAAc,GAAKD,EACjCiC,EAAY7B,KAAK8B,IAAIjC,EAAcD,EAAS8B,GAC5CK,EAAef,EAAMgB,MAAMJ,EAAYC,GAE7C,OACExB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3BV,EAAY,WAAS+B,EAAa,EAAE,MAAIC,EAAU,MAAI,IAC3DH,EAAY,OAGfrB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACR4B,GAAG,kBACH3B,UAAU,eACV4B,MAAOtC,EACPuC,SAAUC,IACRX,GAAYW,EAAMC,OAAOH,OACzBX,EAAe,IACfhB,SAAA,CAEFC,cAAA,UAAQ0B,MAAM,IAAG3B,SAAC,MAClBC,cAAA,UAAQ0B,MAAM,IAAG3B,SAAC,MAClBC,cAAA,UAAQ0B,MAAM,KAAI3B,SAAC,OACnBC,cAAA,UAAQ0B,MAAM,KAAI3B,SAAC,YAIvBC,cAAA,SAAO8B,QAAQ,kBAAkBhC,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACf,EAAU,CACTE,MAAO+B,EACP9B,QAASA,EACTC,YAAaA,EACbC,aAAcyB,IAGhBf,cAAA,MAAAD,SACGwB,EAAalB,KAAI0B,GAChB/B,cAAA,MAAe,UAAQ,OAAMD,SAC1BgC,GADMA,WE1DnBC,IAASC,OAAOjC,cAACc,EAAG,IAAKoB,SAASC,eAAe,U","file":"static/js/main.7a0e5d46.chunk.js","sourcesContent":["interface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onChangePage: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onChangePage,\n}) => {\n  const pagesAmount = Math.ceil(total / perPage);\n  const pages = [];\n\n  for (let i = 1; i <= pagesAmount; i += 1) {\n    pages.push(i);\n  }\n\n  const prevPage = () => {\n    if (currentPage > 1) {\n      onChangePage(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage < pagesAmount) {\n      onChangePage(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={`page-item ${currentPage === page ? 'active' : ''}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onChangePage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={`page-item ${currentPage === pagesAmount ? 'disabled' : ''}`}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesAmount}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const totalAmount = items.length;\n  const firstIndex = (currentPage - 1) * perPage;\n  const lastIndex = Math.min(currentPage * perPage, totalAmount);\n  const currentItems = items.slice(firstIndex, lastIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {firstIndex + 1} - {lastIndex} of{' '}\n        {totalAmount})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalAmount}\n        perPage={perPage}\n        currentPage={currentPage}\n        onChangePage={setCurrentPage}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}